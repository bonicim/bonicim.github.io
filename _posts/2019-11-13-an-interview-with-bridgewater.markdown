---
title: An Interview with Bridgewater
layout: post
categories: [interviewing]
---

I recently interviewed for a software engineer role with Bridgewater Associates, which is the largest, private hedge fund company in the world and is based out of Westport, Connecticut and just about an hour east of New York City. <!--more--> Preparing for this interview was unusual to say the least, but also challening and eye-opening and even refreshing, which I'll explore later in this article. 

<!--more-->

My Bridgewater interview experience consisted of three rounds: an online, coding challenge; a phone interview with two software managers; and a full-day on-site interview, consistening of two technical interviews and a "Life Interview" session (more on that later).

The online coding challenge was standard stuff that I've seen before: a hackerrank-ish link in which you have to solve some algorithms. Nothing too fancy. As long as you study your algorithms and Leetcode questions you will be fine. 

The phone interview was also standard. The two managers focused on asking behavioral questions, projects that I worked on, and questions about how I would have changed my answer on the online coding challenge. Nothing that I haven't seen before. What I did find interesting is that the interviewers asked me for feedback on how they did in interviewing me and how they could improve. That was the first time I've ever heard an interviewer ask for feedback on how they did. It was odd at first to be asked that question. But I gave back my honest feedback on how they could improve. I honestly didn't care about hurting their feelings by telling them how they could improve, but I am not one to hold back if someone geniunely asks for feedback and help. I didn't think I did well, so after the phone call, I immediately forgot about Bridgewater. 

Lo and behold, I get an email from them saying that they are interested in flying me out to Connecticut to do a final round of three interviews. Caught offguard about this interest, I decided to give Bridgewater a try and do the final round. One thing I will say about Bridgewater: they really take care of their candidates. I got first class ticket to fly across the country, a hotel room, and catered lunch. Yes, those are all standard. But the first class plane ticket made it memorable. 

Now onto the on-site interviews. The on-site consists of three interviews: technical interview, Life Interview, and then a system design interview. The technical interview was pretty standard; they asked an algorithm question. But what I really found interesing was that the interviewers (both junior engineers) were interested in learning how I think and solve a problem. I said I would write the solution in Python and they offered that I could use pseudocode if I wanted to.Â That was a first. Since I prepared for algorithms, I was confident in answering the question. But the best thing I learned was how to think on your feet and deviate from the answer, how to improve upon the answer, which requires a thorough understanding of the problem. I enjoyed this interview immensely. 

The second interview was titled "Life Interview". I had no idea what to expect. The recruiters told me that this interview was meant to understand who I was, my values, what motivates me, and where I come from. A lot of touchy-feely stuff. No behavioral questions at all. In fact, there is no list of structured questions. The interviewer was trained to dig deep into my history and ask me open-ended questions about my life. When the interview started, he asked the much-maligned question: "Tell me about yourself". Ugh. Everyone hates that question. No one really knows how best to answer it. But taking the cue from the recruiters, I decided to be really honest and give my life story in five minutes. I told him about my family, my parents, my past jobs and career changes, and school. From the answer I gave him, he then asked follow-up questions on my life. Really probing questions. I think he wanted to understand why I made the decisions that I made, what was my thought process, and what I learned from it. At the end of the hour, I felt it was not an interview but more like a podcast and I'm the special guest. I really liked this interview because I got to be myself. I didn't pull out any STAR stories. I simply just spoke from my heart. It was easy in a sense. I didn't have or even want to put a show on. I simply was myself. And that was refreshing for once. This by far was my favorite interview. 

Lunch came and went. I simply had lunch by myself in the conference room. Bridgewater is located in the Connecticut suburbs and is in a corporate park. There are no places to eat out. 

The final interview was a system design interview. I didn't prepare as much for this interview because I have never done a system design interview. And on top of that, the videos and articles on how to prepare for system design interviews were not helpful or interesting to me; there's so much to cover and a breadth of possibilities, I just didn't know where to start. So I just relied on my past work experience with designs. Big mistake on my part. But one that I will never forget. The system design interview consisted of two senior engineers. They gave me a diagram of a system and a very well-written explanation of how it works. They then asked me a hypothetical question on the system and asked me to problem-solve it. I flailed! I totally had the wrong approach. I approached it as if I was oncall and not from a debugging perspective. I kept asking questions but couldn't get to the heart of the problem. The answer didn't really matter because the interview exposed a weakness of mine: that I don't really take the time to truly understand a system and that I don't have a mental map and framework of how to understand a complex system. The best part is that the interviewers gave me really good feedback on how I could improve, how to change my problem-solving and my thinking, and how to approach such a system design problem in a systematic way instead of the my flailing-by-the-handlebars way. It was eye-opening. And very insightful. 

Overall, I really liked the Bridgewater interview experience. Unlike other companies that I interviewed for, Bridgewater doesn't simply interview and hire the engineer who best learned algorithms and memorized Leetcode ansers. They really do care about how you think, how you step through and solve a problem, and how you go about living your life. Preparing for Bridgewater was almost like threapy. I read the founder's book and he focused not on the business but on how he went about starting his business, his values, his failures, and his thinking process. I learned a lot about myself, how I could improve as a software engineer, and how to prepare for behavioral and system design questions. Most importantly, I came away with a very positive experience with the Bridgewater interview process. Yes, I did read the horror stories on Glassdoor and the media. I read about the cultish atmosphere, about the idea of "radical transparency". And I saw it first-hand. Everyone I met, especially the recruiters, told me what to expect and any schedule changes. The engineers didn't hold back on constructive feedback. The senior engineers told me that I needed to work on my mental map-making on system design. The senior manager told me that Bridgewater is not for everyone and that you will get dinged on for every little thing and that taking feedback is not something to be taken lightly. At first, I found the "radical transparency" exhausting. But after the day ended, I had a more favorable view of Bridgewater because they were so honest with me, telling me things that I didn't want to hear (constructive feedback) but had to hear nonetheless. Whether Bridgewater gives me an offer, I will always have a positive view of the company and its culture. I highly recommend any software engineer looking into doing financial tech to consider applying and interviewing for Bridgewater. The interview process is unique among other large companies; and the on-site interview will challenge you and even change you if you allow it. 
